#include<iostream>
#include<string>
#include<fstream>
using namespace std;
//Entrada:
//Sortida:
const int MAX=1000;
const string EOP= "SORTIR";
struct tempo{
    int dia;
    int mes;
    int any;
};
struct info_pacient{
    string codi;
    tempo data_entrada_pool;
    string grup_sanguini;
    string hospital;
    string ciutat;
    string codi_donant_associat;
    string grup_sanguini_donant_associat;
};
struct info_donant{
    string codi;
    string grup_sanguini;
    string codi_pacient_associat;
};
struct Taula_Pacients{
    info_pacient vec[MAX];
    int n;
};
struct Taula_Donants{
    info_donant vec[MAX];
    int n;
};
void verificar_existencia_codi_pacient_o_donant_associat_amb_pos(const Taula_Pacients&pacients,const Taula_Donants&donants,string codi,bool&trobat,int&pos,char element)
//Pre: 0<=pacients.vec.n<=MAX i 0<=donants.vec.n<=MAX. "Element ha de prendre valor 'P' o 'D' necessàriament.
//Post: La funció troba si el codi a cercar existeix amb la seva posició a la taula demanada ('P'(pacients) o 'D'(donants)).
{
    int esq=0,dret=pacients.n-1,mig=(esq+dret)/2;
    trobat=false;
    if(element=='P'){//Busquem l'element a la taula dels pacients
        while(esq!=dret-1 && pacients.vec[mig].codi!=codi){
            if(pacients.vec[mig].codi>codi)dret=mig-1;
            else esq=mig+1;
            mig=(esq+dret)/2;
        }
        if(pacients.vec[mig].codi==codi){
            trobat=true;
            pos=mig;
        }
        else if(pacients.vec[dret].codi==codi){
            trobat=true;
            pos=dret;
        }
    }
    else{//Busquem el codi per la taula dels donants
            dret=donants.n-1;
            mig=(esq+dret)/2;
            while(esq!=dret-1&&donants.vec[mig].codi!=codi){
            if (donants.vec[mig].codi>codi)dret=mig;
            else esq=mig;
            mig=(esq+dret)/2;
        }
        if(donants.vec[mig].codi==codi){
            trobat=true;
            pos=mig;
        }
        else if(donants.vec[dret].codi==codi){
            trobat=true;
            pos=dret;
        }
    }
}
void inserir_ordenant(Taula_Pacients& pacients,Taula_Donants& donants,char element)
//Pre: la quantitat d'elements a la taula dels pacients i dels donants han de ser >=0 i <=MAX. L'element ha de prendre valor D(donants) o P(pacients)
//Post: s'insereix ordenadament per codi ascendent la dada del pacient o donant a la taula adequada.
{
    if(donants.n<MAX&&element=='D'){
        info_donant aux;int i=donants.n;
        while(i>0 && donants.vec[i].codi<donants.vec[i-1].codi)
        {
            aux=donants.vec[i];
            donants.vec[i]=donants.vec[i-1];
            donants.vec[i-1]=aux;
            i--;
        }
        donants.n++;
    }
    else if(pacients.n<MAX&&element=='P')
    {
        info_pacient aux;int i=pacients.n;
        while(i>0&&pacients.vec[i].codi<pacients.vec[i-1].codi){
            aux=pacients.vec[i];
            pacients.vec[i]=pacients.vec[i-1];
            pacients.vec[i-1]=aux;
            i--;
        }
        pacients.n++;
    }
}
void eliminar_fitxa(Taula_Pacients&pacients,Taula_Donants&donants,int pos,int element)
//Pre:
//Post:
{
    if(pacients.n>0&&element=='P'){
        for(int i=pos;i<pacients.n-1;i++)pacients.vec[i]=pacients.vec[i+1];
        pacients.n--;
    }
    else if(donants.n>0){
        for(int i=pos;i<donants.n-1;i++)donants.vec[i]=donants.vec[i+1];
        donants.n--;
    }
}
void llegir_fitxers_ordenant_taules(ifstream&fitxer_pacients,ifstream&fitxer_donants,Taula_Pacients&pacients,Taula_Donants&donants)
//Pre:
//Post:
{
    info_donant aux;bool trobat=false;
    int pos;
    pacients.n=0;
    while(pacients.n<MAX && not fitxer_pacients.eof())
    {
        pacients.vec[pacients.n].codi_donant_associat="0";
        fitxer_pacients>>pacients.vec[pacients.n].codi;
        fitxer_pacients>>pacients.vec[pacients.n].data_entrada_pool.dia;
        fitxer_pacients>>pacients.vec[pacients.n].data_entrada_pool.mes;
        fitxer_pacients>>pacients.vec[pacients.n].data_entrada_pool.any;
        fitxer_pacients>>pacients.vec[pacients.n].grup_sanguini;
        fitxer_pacients>>pacients.vec[pacients.n].hospital;
        fitxer_pacients>>pacients.vec[pacients.n].ciutat;
        inserir_ordenant(pacients,donants,'P');
    }
    //Per alguna raó hi ha fora de rang. Sospites en "inserir_ordenant"
    donants.n=0;
    while(donants.n<pacients.n && not fitxer_donants.eof()){
        fitxer_donants>>aux.codi;
        fitxer_donants>>aux.grup_sanguini;
        fitxer_donants>>aux.codi_pacient_associat;
        verificar_existencia_codi_pacient_o_donant_associat_amb_pos(pacients,donants,aux.codi_pacient_associat,trobat,pos,'P');
        if(trobat){
            donants.vec[donants.n]=aux;
            inserir_ordenant(pacients,donants,'D');
            pacients.vec[pos].codi_donant_associat=aux.codi;
            pacients.vec[pos].grup_sanguini_donant_associat=aux.grup_sanguini;
        }
    }
    pos=0;
    while(pos<pacients.n){
        if(pacients.vec[pos].codi_donant_associat=="0")eliminar_fitxa(pacients,donants,pos,'P');
        else pos++;
    }
}
bool es_compatible(string sang1,string sang2)
//Pre:
//Post:
{
    bool resultat=false;
    if(sang1==sang2 or sang1=="O" or sang2=="AB")resultat=true;
    return resultat;
}
pac
void inserir_a_taula_aux_ordenant_per_grup_sanguini(Taula_Pacients&taula_aux,info_pacient pacient)
//Pre:
//Post:
{
    if(taula_aux.n<MAX){
        int j=taula_aux.n-1;
        taula_aux.n++;
        while(j>=0&&es_menor(taula_aux.vec[j],pacient)){
            taula_aux.vec[j+1]=taula_aux.vec[j];
            j--;
        }
        taula_aux.vec[j+1]=pacient;
    }
}
void execucio_del_programa(Taula_Pacients&pacients,Taula_Donants&donants)
//Pre:
//Post:
{
    cout<<endl;
    int pos,pos1;bool trobat;
    info_pacient aux_p;
    string missatge;
    cout<< "ENTRA OPCIO:"<<endl;cin>>missatge;
    while(missatge!=EOP){
        if(missatge=="ALTA"){
            cin>>aux_p.codi;
            cin>>aux_p.data_entrada_pool.dia;
            cin>>aux_p.data_entrada_pool.mes;
            cin>>aux_p.data_entrada_pool.any;
            cin>>aux_p.grup_sanguini;
            cin>>aux_p.hospital;
            cin>>aux_p.ciutat;
            cin>>aux_p.codi_donant_associat;
            cin>>aux_p.grup_sanguini_donant_associat;
            verificar_existencia_codi_pacient_o_donant_associat_amb_pos(pacients,donants,aux_p.codi,trobat,pos,'P');
            if(pacients.n<MAX&&not trobat){//el nºpacients sera igual a nºdonants pel que entenc. per tant només cal verificar una n
                pacients.vec[pacients.n]=aux_p;
                donants.vec[donants.n].codi=aux_p.codi_donant_associat;
                donants.vec[donants.n].grup_sanguini=aux_p.grup_sanguini_donant_associat;
                donants.vec[donants.n].codi_pacient_associat=aux_p.codi;
                inserir_ordenant(pacients,donants,'P');
                inserir_ordenant(pacients,donants,'D');
                cout<<"ALTA REALITZADA"<<endl;
            }
            else cout<< "CODI EXISTENT"<<endl;
        }
        else if(missatge=="BAIXA"){
            cin>>aux_p.codi;
            verificar_existencia_codi_pacient_o_donant_associat_amb_pos(pacients,donants,aux_p.codi,trobat,pos,'P');
            if(trobat){
                aux_p.codi_donant_associat=pacients.vec[pos].codi_donant_associat;
                eliminar_fitxa(pacients,donants,pos,'P');
                verificar_existencia_codi_pacient_o_donant_associat_amb_pos(pacients,donants,aux_p.codi_donant_associat,trobat,pos,'D');
                eliminar_fitxa(pacients,donants,pos,'D');
                cout<<"BAIXA REALITZADA"<<endl;
            }
            else cout<< "CODI INEXISTENT"<<endl;
        }
        else if(missatge=="PACIENT"){
            cin>>aux_p.codi;
            verificar_existencia_codi_pacient_o_donant_associat_amb_pos(pacients,donants,aux_p.codi,trobat,pos,'P');
            if(trobat){
                cout<<pacients.vec[pos].codi<<" "<<pacients.vec[pos].data_entrada_pool.dia<<" "<<pacients.vec[pos].data_entrada_pool.mes<<" "<<pacients.vec[pos].data_entrada_pool.any<<" ";
                cout<<pacients.vec[pos].grup_sanguini<<" "<<pacients.vec[pos].hospital<<" "<<pacients.vec[pos].ciutat<<" ";
                cout<<pacients.vec[pos].codi_donant_associat<<" "<<pacients.vec[pos].grup_sanguini_donant_associat<<" "<<endl;
            }
            else cout<< "CODI INEXISTENT"<<endl;
        }
        else if(missatge=="DONANT"){
            cin>>aux_p.codi_donant_associat;
            verificar_existencia_codi_pacient_o_donant_associat_amb_pos(pacients,donants,aux_p.codi_donant_associat,trobat,pos,'D');
            if(trobat){
                cout<<donants.vec[pos].codi<<" "<<donants.vec[pos].grup_sanguini<<" "<<donants.vec[pos].codi_pacient_associat<<" ";
                verificar_existencia_codi_pacient_o_donant_associat_amb_pos(pacients,donants,donants.vec[pos].codi_pacient_associat,trobat,pos,'P');
                cout<<pacients.vec[pos].data_entrada_pool.dia<<" "<<pacients.vec[pos].data_entrada_pool.mes<<" "<<pacients.vec[pos].data_entrada_pool.any<<" ";
                cout<<pacients.vec[pos].grup_sanguini<<" "<<pacients.vec[pos].hospital<<" "<<pacients.vec[pos].ciutat;
                cout<<endl;
            }
            else cout<< "CODI INEXISTENT"<<endl;
        }
        else if(missatge=="POSSIBLES_DONANTS"){
            cin>>aux_p.codi;
            verificar_existencia_codi_pacient_o_donant_associat_amb_pos(pacients,donants,aux_p.codi,trobat,pos1,'P');
            if(trobat){
                int comptador=donants.n-1;
                for(int i=0;i<donants.n;i++){
                    if(es_compatible(donants.vec[i].grup_sanguini,pacients.vec[pos1].grup_sanguini)){
                        cout<<donants.vec[i].codi<<" "<<donants.vec[i].grup_sanguini<<" "<<donants.vec[i].codi_pacient_associat<<" ";
                        verificar_existencia_codi_pacient_o_donant_associat_amb_pos(pacients,donants,donants.vec[i].codi_pacient_associat,trobat,pos,'P');
                        cout<<pacients.vec[pos].data_entrada_pool.dia<<" "<<pacients.vec[pos].data_entrada_pool.mes<<" "<<pacients.vec[pos].data_entrada_pool.any<<" "<<pacients.vec[pos].grup_sanguini<<" "<<pacients.vec[pos].hospital<<" "<<pacients.vec[pos].ciutat<<endl;
                        comptador--;
                    }
                }
                if(comptador==donants.n-1)cout<<"NO N'HI HA CAP"<<endl;
            }
            else cout<<"CODI INEXISTENT"<<endl;
        }
        else if(missatge=="POSSIBLES_RECEPTORS"){
            cin>>aux_p.codi_donant_associat;
            verificar_existencia_codi_pacient_o_donant_associat_amb_pos(pacients,donants,aux_p.codi_donant_associat,trobat,pos,'D');
            if(trobat){
                Taula_Pacients taula_aux;
                taula_aux.n=0;
                int comptador=pacients.n-1;
                for(int i=0;i<pacients.n;i++){
                    if(es_compatible(donants.vec[pos].grup_sanguini,pacients.vec[i].grup_sanguini)){
                        inserir_a_taula_aux_ordenant_per_grup_sanguini(taula_aux,pacients.vec[i]);
                        comptador--;
                    }
                }
                if(comptador!=pacients.n-1){
                    for(int i=0;i<taula_aux.n;i++){
                        cout<<taula_aux.vec[i].codi<<" "<<taula_aux.vec[i].data_entrada_pool.dia<<" "<<taula_aux.vec[i].data_entrada_pool.mes<<" "<<taula_aux.vec[i].data_entrada_pool.any<<" ";
                        cout<<taula_aux.vec[i].grup_sanguini<<" "<<taula_aux.vec[i].hospital<<" "<<taula_aux.vec[i].ciutat<<" "<<taula_aux.vec[i].codi_donant_associat<<" "<<taula_aux.vec[i].grup_sanguini_donant_associat<<endl;
                    }
                }
                else cout<< "NO N'HI HA CAP"<<endl;
            }
            else cout<< "CODI INEXISTENT";
        }
        else if(missatge=="INTERCANVI_VIABLE"){
            string codi1;
            cin>>aux_p.codi>>codi1;
            verificar_existencia_codi_pacient_o_donant_associat_amb_pos(pacients,donants,aux_p.codi,trobat,pos,'P');
            if(trobat){
                verificar_existencia_codi_pacient_o_donant_associat_amb_pos(pacients,donants,codi1,trobat,pos1,'P');
                if(trobat){
                    if(es_compatible(pacients.vec[pos].grup_sanguini_donant_associat,pacients.vec[pos1].grup_sanguini)&&es_compatible(pacients.vec[pos1].grup_sanguini_donant_associat,pacients.vec[pos].grup_sanguini))cout<<"SI"<<endl;
                    else cout<<"NO"<<endl;
                }
                else cout<<"CODI INEXISTENT"<<endl;
            }
            else cout<<"CODI INEXISTENT";
        }
        else if(missatge=="LLISTAR_INTERCANVIS_POSSIBLES"){//Ens podem estalviar el if?
            for(int i=0;i<pacients.n-1;i++){
                for(int j=i+1;j<pacients.n;j++){
                    if(es_compatible(pacients.vec[i].grup_sanguini_donant_associat,pacients.vec[j].grup_sanguini)&&es_compatible(pacients.vec[j].grup_sanguini_donant_associat,pacients.vec[i].grup_sanguini)){
                        cout<<pacients.vec[i].codi<<" "<<pacients.vec[i].grup_sanguini<<" "<<pacients.vec[j].codi<<" "<<pacients.vec[j].grup_sanguini<<endl;
                    }
                }
            }
        }
        cout<<endl;cout<<"ENTRA OPCIO:";cout<<endl;
        cin>>missatge;

    }
}
int main()
{
    cout<< "INTRODUEIX NOM FITXER DE PACIENTS:"<<endl;
    Taula_Pacients pacients;Taula_Donants donants;
    string nom_fitxer_p,nom_fitxer_d;
    cin>>nom_fitxer_p;
    ifstream fitxer_pacients(nom_fitxer_p.c_str());
    if(not fitxer_pacients.fail()){
        cout<< "INTRODUEIX NOM FITXER DE DONANTS:"<<endl;
        cin>>nom_fitxer_d;
        ifstream fitxer_donants(nom_fitxer_d.c_str());
        if(not fitxer_donants.fail()){
            llegir_fitxers_ordenant_taules(fitxer_pacients,fitxer_donants,pacients,donants);
            execucio_del_programa(pacients,donants);
        }
        else cout<< "ERROR OBERTURA FITXER";
    }
    else cout<< "ERROR OBERTURA FITXER";
    return 0;
}
